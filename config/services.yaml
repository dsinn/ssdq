# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    srcom.api.base_uri: !php/const 'Dsinn\SrcomApi\Client::DEFAULT_BASE_URI'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\DefaultController:
        arguments: ['@srcom.api.helper']

    cache.filesystem:
        class: 'Doctrine\Common\Cache\FilesystemCache'
        arguments: ['%sys_get_temp_dir%']

    http.client:
        class: 'GuzzleHttp\Client'
        arguments:
            - base_uri: '%srcom.api.base_uri%'
              handler: '@http.handlerstack'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    http.cache.middleware:
        class: 'Kevinrob\GuzzleCache\CacheMiddleware'
        arguments: ['@http.cache.strategy']

    http.cache.storage:
        class: 'Kevinrob\GuzzleCache\Storage\DoctrineCacheStorage'
        arguments:
            - '@cache.filesystem'

    http.cache.strategy:
        class: 'Kevinrob\GuzzleCache\Strategy\GreedyCacheStrategy'
        arguments:
            - '@http.cache.storage'
            - 1800

    http.handlerstack:
        class: 'GuzzleHttp\HandlerStack'
        factory: ['GuzzleHttp\HandlerStack', create]
        calls:
            - [push, ['@http.cache.middleware']]

    srcom.api.client:
        class: 'Dsinn\SrcomApi\Client'
        arguments: ['@http.client']

    srcom.api.helper:
        class: 'App\Helper\APIHelper'
        arguments: ['@srcom.api.client']
